#include "ErrorDetection.h"
#include "Node.h"
#include "NodeMaster.h"
#include "SubNFA.h"
#include "CheckIfAccepted.h"
#include <iostream>
#include <string>

using namespace std;

// 3. Write a program reading regular expressions, then constructing NFA using Thompson algorithm,
// converting NFA into DFA and checking if input strings are generated by this expression (working on DFA).

// Îµ - epsilon will be replaced with big E
// only 97-122 ASCII characters allowed (small letters)

int main()
{
    cout<<"+ is a symbol of AND operation, added by postfix notation generator"<<endl;
    cout<<"-------------------------------------------------------------------"<<endl<<endl;

	string RE = "a(a|b)*ba";
	//string RE = "(ab)|(cd)";
	//string RE = "ab*";
	//string RE = "(E|a)b";
	//string RE = "b*";
	//string RE = "NOT_ALLOWED";

	string testString1 = "aba";
	string testString2 = "aaaaabbabbabbbaaaaaaaaaaaaaaaba";
	string testString3 = "abcde";
	string testString4 = "baaaa";
	string testString5 = "abba";

	cout<<"Original RE: "<<RE<<endl;
	checkRE(RE);			//Check if RE can be used to construct NFA and return number of parenthesis.
                                            //If not, program will be terminated.
	NodeMaster* start = constructNFA(RE);

	check(testString1, start);
	check(testString2, start);
	check(testString3, start);
	check(testString4, start);
	check(testString5, start);

	return 0;
}
