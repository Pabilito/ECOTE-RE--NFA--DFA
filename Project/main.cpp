#include "ErrorDetection.h"
#include "Node.h"
#include "NodeMaster.h"
#include "SubNFA.h"
#include <iostream>
#include <string>

using namespace std;

// 3. Write a program reading regular expressions, then constructing NFA using Thompson algorithm,
// converting NFA into DFA and checking if input strings are generated by this expression (working on DFA).

// Îµ - epsilon will be replaced with big E
// only 97-122 ASCII characters allowed (small letters)

int main()
{
    cout<<"+ is a symbol of AND operation, added by postfix notation generator"<<endl;
    cout<<"-------------------------------------------------------------------"<<endl<<endl;
	string RE = "a(a|b)*ba";
	//string RE = "(ab)|(cd)";
	checkRE(RE);			//Check if RE can be used to construct NFA and return number of parenthesis.
                                            //If not, program will be terminated.
	NodeMaster* start = constructNFA(RE);

	cout <<"Start node: "<< start->GetStartNode()->getNodeNumber() << " - Transition(0) at symbol: "<< start->GetStartNode()->getTransitionAtPosition(0) <<endl;

	//Start node: 6 - Transition(0) at symbol: E    for   RE = (ab)|(cd)
	//Start node: 8 - Transition(0) at symbol: a    for   RE = a(a|b)*ba
	return 0;
}
